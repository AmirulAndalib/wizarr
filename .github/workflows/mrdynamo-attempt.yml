name: MrDynamo Attempt

on:
  push:
    branches:
      - v3-beta

permissions:
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: wizarrrr/wizarr
  IMAGE_TAG: v3-beta

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - amd64
          - arm64

    steps:
      # Checkout the repo
      - name: Checkout
        uses: actions/checkout@v2

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      # Build the image
      - name: Build for ${{ matrix.platform }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}-${{ matrix.platform }}
          platforms: linux/${{ matrix.platform }}
          outputs: type=docker,dest=/tmp/docker-image-${{ matrix.platform }}.tar

      # Upload the Artifact for docker image
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image-${{ matrix.platform }}
          path: /tmp/docker-image-${{ matrix.platform }}.tar

  create_manifest_and_push:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Login to GHCR
      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Download Artifacts for AMD64
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: docker-image-amd64
          path: /tmp

      # Download Artifacts for ARM64
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: docker-image-arm64
          path: /tmp

      # Load Images
      - name: Load Images
        run: |
          docker load -i /tmp/docker-image-amd64.tar
          docker load -i /tmp/docker-image-arm64.tar

      # Create a multi-arch manifest for arm64 and amd64
      - name: Create a multi-arch manifest
        run: |
          docker manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}-amd64 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}-arm64
        env:
          DOCKER_CLI_PLUGIN_BUILD: enable

      # Push manifest
      - name: Push multi-arch manifest
        run: docker manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        env:
          DOCKER_CLI_PLUGIN_BUILD: enable
