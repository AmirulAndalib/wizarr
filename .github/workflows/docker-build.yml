name: Docker Build and Push

on:
  push:
    branches:
      - v3-beta

permissions:
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: wizarrrr/wizarr
  IMAGE_TAG: v3-beta

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm64

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push for ${{ matrix.platform }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: false # Do not push at this stage
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          platforms: ${{ matrix.platform }}

      - name: Pull and Push Images
        run: |
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}-linux/amd64
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}-linux/arm64

          # Tag and push both images with the same tag
          docker tag ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}-linux/amd64 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          docker tag ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}-linux/arm64 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        env:
          DOCKER_CLI_PLUGIN_BUILD: enable
