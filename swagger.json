{"swagger": "2.0", "basePath": "/api", "paths": {"/accounts/": {"post": {"responses": {"500": {"description": "Internal server error"}, "409": {"description": "Account already exists"}, "400": {"description": "Invalid account"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AdminsGetModel"}}}, "description": "Create a new account", "operationId": "post_accounts_list_api", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AdminsPostModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "security": [{"jsonWebToken": []}, {"cookieAuth": []}], "tags": ["Accounts"]}, "get": {"responses": {"500": {"description": "Internal server error"}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/AdminsGetModel"}}}}, "description": "Get all accounts", "operationId": "get_accounts_list_api", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "security": [{"jsonWebToken": []}, {"cookieAuth": []}], "tags": ["Accounts"]}}, "/accounts/{username}": {"parameters": [{"name": "username", "in": "path", "required": true, "type": "string"}], "put": {"responses": {"500": {"description": "Internal server error"}, "404": {"description": "Account not found"}, "400": {"description": "Invalid account"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AdminsGetModel"}}}, "description": "Update an account", "operationId": "put_accounts_api", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AdminsPostModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "security": [{"jsonWebToken": []}, {"cookieAuth": []}], "tags": ["Accounts"]}, "get": {"responses": {"500": {"description": "Internal server error"}, "404": {"description": "Account not found"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AdminsGetModel"}}}, "description": "Get an account", "operationId": "get_accounts_api", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "security": [{"jsonWebToken": []}, {"cookieAuth": []}], "tags": ["Accounts"]}}, "/auth/login": {"post": {"responses": {"500": {"description": "Internal server error"}, "401": {"description": "Invalid Username or Password"}, "200": {"description": "Login successful"}}, "description": "Login to the application", "operationId": "post_login", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/LoginPostModel"}}], "tags": ["Authentication"]}}, "/auth/logout": {"post": {"responses": {"500": {"description": "Internal server error"}, "200": {"description": "Logout successful"}}, "description": "Logout the currently logged in user", "operationId": "post_logout", "tags": ["Authentication"]}}, "/invites/": {"post": {"responses": {"500": {"description": "Internal server error"}}, "description": "Create an invite", "operationId": "post_invites_list_api", "tags": ["Invites"]}, "get": {"responses": {"500": {"description": "Internal server error"}}, "description": "Get all invites", "operationId": "get_invites_list_api", "tags": ["Invites"]}}, "/libraries/": {"post": {"responses": {"500": {"description": "Internal server error"}}, "operationId": "post_libraries_list_api", "tags": ["Libraries"]}, "get": {"responses": {"500": {"description": "Internal server error"}}, "description": "Get all libraries", "operationId": "get_libraries_list_api", "tags": ["Libraries"]}}, "/notifications/": {"post": {"responses": {"500": {"description": "Internal server error"}, "409": {"description": "Notification agent already exists"}, "400": {"description": "Invalid notification agent"}, "201": {"description": "Notification created successfully"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/NotificationsGetModel"}}}, "description": "Create a new notification agent", "operationId": "post_notifications_list_api", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/NotificationsPostModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "security": [{"jsonWebToken": []}, {"cookieAuth": []}], "tags": ["Notifications"]}, "get": {"responses": {"500": {"description": "Internal server error"}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/NotificationsGetModel"}}}}, "description": "Get all notifications", "operationId": "get_notifications_list_api", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "security": [{"jsonWebToken": []}, {"cookieAuth": []}], "tags": ["Notifications"]}}, "/notifications/{notification_id}": {"parameters": [{"name": "notification_id", "in": "path", "required": true, "type": "integer"}], "delete": {"responses": {"500": {"description": "Internal server error"}, "404": {"description": "Notification agent not found"}, "400": {"description": "Invalid notification ID"}, "200": {"description": "Notification agent deleted successfully"}}, "description": "Update a notification agent by ID", "operationId": "delete_notifications_api", "security": [{"jsonWebToken": []}, {"cookieAuth": []}], "tags": ["Notifications"]}, "get": {"responses": {"500": {"description": "Internal server error"}, "404": {"description": "Notification agent not found"}, "400": {"description": "Invalid notification ID"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/NotificationsGetModel"}}}, "description": "Get a notification agent by ID", "operationId": "get_notifications_api", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "security": [{"jsonWebToken": []}, {"cookieAuth": []}], "tags": ["Notifications"]}}, "/scan-libraries/": {"post": {"responses": {"500": {"description": "Internal server error"}}, "operationId": "post_scan_libraries_list_api", "tags": ["Scan Libraries"]}}, "/sessions/": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_sessions_list_api", "security": [{"jsonWebToken": []}, {"cookieAuth": []}], "tags": ["Sessions"]}}, "/sessions/{sessions_id}": {"parameters": [{"name": "sessions_id", "in": "path", "required": true, "type": "string"}], "delete": {"responses": {"200": {"description": "Success"}}, "operationId": "delete_sessions_api", "security": [{"jsonWebToken": []}, {"cookieAuth": []}], "tags": ["Sessions"]}, "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_sessions_api", "security": [{"jsonWebToken": []}, {"cookieAuth": []}], "tags": ["Sessions"]}}, "/settings/": {"post": {"responses": {"500": {"description": "Internal server error"}, "400": {"description": "Invalid settings"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/SettingsGetModel"}}}, "description": "Update all settings", "operationId": "post_settings_list_api", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/SettingsPostModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "security": [{"jsonWebToken": []}, {"cookieAuth": []}], "tags": ["Settings"]}, "put": {"responses": {"500": {"description": "Internal server error"}, "400": {"description": "Invalid settings"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/SettingsGetModel"}}}, "description": "Update all settings", "operationId": "put_settings_list_api", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/SettingsPostModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "security": [{"jsonWebToken": []}, {"cookieAuth": []}], "tags": ["Settings"]}, "get": {"responses": {"500": {"description": "Internal server error"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/SettingsGetModel"}}}, "description": "Get all settings", "operationId": "get_settings_list_api", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "security": [{"jsonWebToken": []}, {"cookieAuth": []}], "tags": ["Settings"]}}, "/settings/{setting_id}": {"parameters": [{"name": "setting_id", "in": "path", "required": true, "type": "string"}], "put": {"responses": {"500": {"description": "Internal server error"}, "404": {"description": "Setting not found"}, "400": {"description": "Invalid setting ID"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/SettingsGetModel"}}}, "description": "Update a setting by ID", "operationId": "put_settings_api", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/SettingsPostModel"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "security": [{"jsonWebToken": []}, {"cookieAuth": []}], "tags": ["Settings"]}, "delete": {"responses": {"500": {"description": "Internal server error"}, "404": {"description": "Setting not found"}, "400": {"description": "Invalid setting ID"}, "200": {"description": "Successfully deleted the setting"}}, "description": "Delete a setting by ID", "operationId": "delete_settings_api", "security": [{"jsonWebToken": []}, {"cookieAuth": []}], "tags": ["Settings"]}, "get": {"responses": {"500": {"description": "Internal server error"}, "404": {"description": "Setting not found"}, "400": {"description": "Invalid setting ID"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/SettingsGetModel"}}}, "description": "Get a setting by ID", "operationId": "get_settings_api", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "security": [{"jsonWebToken": []}, {"cookieAuth": []}], "tags": ["Settings"]}}, "/tasks/": {"get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_tasks_list_api", "security": [{"jsonWebToken": []}, {"cookieAuth": []}], "tags": ["Tasks"]}}, "/tasks/{task_id}": {"parameters": [{"name": "task_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_tasks_api", "security": [{"jsonWebToken": []}, {"cookieAuth": []}], "tags": ["Tasks"]}}, "/tasks/{task_id}/run": {"parameters": [{"name": "task_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success"}}, "operationId": "get_tasks_run_api", "security": [{"jsonWebToken": []}, {"cookieAuth": []}], "tags": ["Tasks"]}}, "/users/": {"post": {"responses": {"500": {"description": "Internal server error"}}, "operationId": "post_users_list_api", "tags": ["Users"]}, "get": {"responses": {"500": {"description": "Internal server error"}}, "description": "Get all users in the database", "operationId": "get_users_list_api", "tags": ["Users"]}}, "/users/logout": {"post": {"responses": {"500": {"description": "Internal server error"}}, "operationId": "post_users_api", "tags": ["Users"]}}}, "info": {"title": "Wizarr API", "version": "1.0", "description": "Wizarr API"}, "produces": ["application/json"], "consumes": ["application/json"], "securityDefinitions": {"jsonWebToken": {"type": "apiKey", "in": "header", "name": "Authorization", "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\""}, "cookieAuth": {"type": "apiKey", "in": "cookie", "name": "session"}}, "tags": [{"name": "Accounts", "description": "Accounts related operations"}, {"name": "Authentication", "description": "Authentication related operations"}, {"name": "Invites", "description": "Invites related operations"}, {"name": "Libraries", "description": "Libraries related operations"}, {"name": "Notifications", "description": "Notifications related operations"}, {"name": "Scan Libraries", "description": " related operations"}, {"name": "Sessions", "description": "Sessions related operations"}, {"name": "Settings", "description": "Settings related operations"}, {"name": "Tasks", "description": "Tasks related operations"}, {"name": "Users", "description": "Users related operations"}], "definitions": {"AdminsPostModel": {"required": ["password", "username"], "properties": {"username": {"type": "string", "description": "Username"}, "password": {"type": "string", "description": "Password"}, "email": {"type": "string", "description": "Email"}}, "type": "object"}, "AdminsGetModel": {"required": ["id", "username"], "properties": {"id": {"type": "integer", "description": "The ID of the admin"}, "username": {"type": "string", "description": "Username"}, "email": {"type": "string", "description": "Email"}, "last_login": {"type": "string", "description": "Last login"}, "created": {"type": "string", "description": "The date the admin was created"}}, "type": "object"}, "LoginPostModel": {"required": ["password", "username"], "properties": {"username": {"type": "string", "description": "Username"}, "password": {"type": "string", "description": "Password"}, "remember": {"type": "boolean", "description": "Remember me", "default": false}}, "type": "object"}, "NotificationsPostModel": {"required": ["name", "type", "url"], "properties": {"name": {"type": "string", "description": "The name of the notification"}, "type": {"type": "string", "description": "The type of the notification"}, "url": {"type": "string", "description": "The URL of the notification"}, "username": {"type": "string", "description": "The username of the notification"}, "password": {"type": "string", "description": "The password of the notification"}}, "type": "object"}, "NotificationsGetModel": {"required": ["created", "id", "name", "type", "url"], "properties": {"id": {"type": "integer", "description": "The ID of the notification"}, "name": {"type": "string", "description": "The name of the notification"}, "type": {"type": "string", "description": "The type of the notification"}, "url": {"type": "string", "description": "The URL of the notification"}, "username": {"type": "string", "description": "The username of the notification"}, "password": {"type": "string", "description": "The password of the notification"}, "created": {"type": "string", "format": "date-time", "description": "The date the notification was created"}}, "type": "object"}, "SettingsPostModel": {"properties": {"server_type": {"type": "string", "description": "The type of server"}, "server_verified": {"type": "string", "description": "Whether the server has been verified"}, "server_url": {"type": "string", "description": "The URL of the server"}, "server_name": {"type": "string", "description": "The name of the server"}, "discord_id": {"type": "string", "description": "The Discord ID of the server"}, "request_type": {"type": "string", "description": "The type of request server"}, "request_url": {"type": "string", "description": "The URL of the request server"}, "request_api_key": {"type": "string", "description": "The API key of the request server"}, "server_api_key": {"type": "string", "description": "The API key of the server"}, "discord_widget": {"type": "string", "description": "Whether the Discord widget is enabled"}, "custom_html": {"type": "string", "description": "Custom HTML to be displayed on the homepage"}}, "type": "object"}, "SettingsGetModel": {"properties": {"server_type": {"type": "string", "description": "The type of server"}, "server_verified": {"type": "string", "description": "Whether the server has been verified"}, "server_url": {"type": "string", "description": "The URL of the server"}, "server_name": {"type": "string", "description": "The name of the server"}, "discord_id": {"type": "string", "description": "The Discord ID of the server"}, "request_type": {"type": "string", "description": "The type of request server"}, "request_url": {"type": "string", "description": "The URL of the request server"}, "request_api_key": {"type": "string", "description": "The API key of the request server"}, "server_api_key": {"type": "string", "description": "The API key of the server"}, "discord_widget": {"type": "string", "description": "Whether the Discord widget is enabled"}, "custom_html": {"type": "string", "description": "Custom HTML to be displayed on the homepage"}}, "type": "object"}}, "responses": {"ParseError": {"description": "When a mask can't be parsed"}, "MaskError": {"description": "When any error occurs on mask"}, "Exception": {}}, "host": "127.0.0.1:5000"}